<header class="bg-white shadow">
  <div class="container mx-auto px-4 py-4 flex items-center justify-between">
    <div class="flex items-center space-x-3">
      <a href="/" class="text-lg font-semibold text-gray-800">LinkBay</a>
      <% if (typeof tenant !== 'undefined' && tenant.name) { %>
        <span class="text-sm text-gray-500">— <%= tenant.name %></span>
      <% } %>
    </div>

    <div class="hidden md:block">
      <%- include('partials/navbar') %>
    </div>

    <div class="md:hidden">
      <!-- mobile menu toggle (alpine) -->
      <button x-data="{}" @click="$dispatch('toggle-mobile-nav')" aria-label="Open menu" class="p-2 rounded bg-gray-100">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M3 5h14M3 10h14M3 15h14" clip-rule="evenodd" /></svg>
      </button>
    </div>
  </div>

  <!-- Mobile nav (revealed by htmx/alpine event) -->
  <nav id="mobile-nav" class="md:hidden bg-white border-t hidden">
    <div class="px-4 py-3">
      <%- include('partials/navbar') %>
    </div>
  </nav>
</header>
<header>
  <nav>
    <a href="/">Home</a>
    <a href="/docs">Docs</a>
    <a href="/blog">Blog</a>
  </nav>
  <% if (typeof tenant !== 'undefined' && tenant) { %>
    <div style="position:fixed; right:16px; top:8px; background:#fff;padding:6px;border-radius:6px;border:1px solid #ddd">
      <label for="themeSelect" style="font-size:12px;margin-right:6px">Theme</label>
      <select id="themeSelect">
        <option value="light">Light</option>
        <option value="dark">Dark</option>
        <option value="auto">Auto</option>
      </select>
      <label for="langSelect" style="font-size:12px;margin-left:12px;margin-right:6px">Lang</label>
      <select id="langSelect">
        <option value="en">English</option>
        <option value="it">Italiano</option>
        <option value="es">Español</option>
      </select>
    </div>
    <script>
      (function(){
        const sel = document.getElementById('themeSelect');
        const lang = document.getElementById('langSelect');
  const current = <%- JSON.stringify(typeof tenantSettings !== 'undefined' ? tenantSettings.default_theme : 'light') %>;
        sel.value = current || 'light';
        // try to load user preference for language
        (async function(){
          try{ const r = await fetch('/api/user/preferences', { credentials: 'same-origin' }); if(r.ok){ const j = await r.json(); if(j.preferences && j.preferences.language) lang.value = j.preferences.language; } }catch(e){}
        })();
        sel.addEventListener('change', async ()=>{
          const val = sel.value;
          await fetch('/api/tenant/settings', { method: 'PUT', headers: {'Content-Type':'application/json'}, body: JSON.stringify({ default_theme: val }) });
          document.documentElement.setAttribute('data-theme', val);
        });
        lang.addEventListener('change', async ()=>{
          const v = lang.value;
          // persist per-user preference
          await fetch('/api/user/preferences', { method: 'PUT', headers: {'Content-Type':'application/json'}, body: JSON.stringify({ preferences: { language: v } }) });
          // optionally reload to apply new language
          window.location.reload();
        });
      })();
    </script>
  <% } %>
</header>
